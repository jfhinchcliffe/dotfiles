[user]
	email = hinchy@gmail.com
	name = Jason Hinchcliffe
[core]
    excludesfile = ~/.gitignore
[alias]
    a = !git track && git add -p
    add-staged = "!git diff --name-only --cached | xargs git add" # Add new changes to files that are already staged
    b = branch
    p = !git push -u origin "$(git rev-parse --abbrev-ref HEAD)"
    ca = commit --amend
    car = commit --amend --no-edit
    cf = commit --fixup
    clear = !git add . && git reset --hard
    co = checkout
    conflicts = "!git ls-files -u | awk '{print $4}' | sort -u"
    copysha = "!git rev-parse HEAD | tr -d '\n' | pbcopy"
    df = diff --word-diff --color-words
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lsb = !git ls master..HEAD
    master = checkout master
    mup = !git checkout master && git pull && git checkout - # Master up - merge in remote master then return to current branch
    mupr = !git mup && git rebase master # Master up and rebase - replay changes on top of current master
    purge = "!git checkout master && git pull && git branch --merged | grep -Ev 'master' | xargs -n 1 git branch -d" # Delete all branches that have been merged
    s = status
    track = "!git status --untracked=all --porcelain | grep -e '^??' | colrm 1 3 | xargs git add -N" # Add untracked files to the index. Really useful when combined with git add -p, as it includes all files in the interactive staging session. Courtesty of Dan.
    uncommit = reset --soft HEAD^
    rsm = rebase -i --autosquash master
    show-merge = !git show $(git find-merge $1)
    find-merge = !sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'
[push]
    default = upstream
[fetch]
    prune = true
[url "git@github.com:"]
    insteadOf = https://github.com/
[core]
	editor = code --wait
